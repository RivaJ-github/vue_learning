(() => { var e = { 928: (e, t, r) => { "use strict"; r.r(t), r.d(t, { default: () => o }); const o = function () { return { tag: "div", props: { onClick: () => alert("hello") }, children: "click me" } } } }, t = {}; function r(o) { var n = t[o]; if (void 0 !== n) return n.exports; var i = t[o] = { exports: {} }; return e[o](i, i.exports, r), i.exports } r.d = (e, t) => { for (var o in t) r.o(t, o) && !r.o(e, o) && Object.defineProperty(e, o, { enumerable: !0, get: t[o] }) }, r.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), r.r = e => { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 }) }, (() => { const { default: e } = r(928); !function e(t, r) { "string" == typeof t.tag ? function (t, r) { const o = document.createElement(t.tag); for (const e in t.props) /^on/.test(e) && o.addEventListener(e.substr(2).toLowerCase(), t.props[e]); "string" == typeof t.children ? o.appendChild(document.createTextNode(t.children)) : Array.isArray(t.children) && t.children.forEach((t => e(t, o))), r.appendChild(o) }(t, r) : "function" == typeof t.tag && function (t, r) { e(t.tag(), r) }(t, r) }({ tag: e }, document.body) })() })();